{"version":3,"file":"meshcollection.js","sources":["../node_modules/rollup-plugin-webworkify/lib/workerhelper.js","../src/workers/ObjParser.worker.js","../src/MeshParser.js","../src/PointCloudParser.js","../src/MeshCollection.js"],"sourcesContent":["/*! rollup-plugin-webworkify/workerhelper.js v0.0.4 | MIT Licensed | Allex Wang <allex.wxn@gmail.com> */\nvar win = window, BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder, URL = win.URL || win.webkitURL || win.mozURL || win.msURL, SCRIPT_TYPE = \"application/javascript\", TARGET = \"undefined\" == typeof Symbol ? \"__t\" + +new Date() : Symbol(), Worker = win.Worker, nextTick = win.setImmediate || function(e) {\n  return setTimeout(e, 1);\n};\n\nfunction workerCtor(e, t) {\n  return function r(n) {\n    var o = this;\n    if (!(o instanceof r)) return new r(n);\n    if (!t) return new Worker(e);\n    if (Worker && !n) {\n      var i = createSourceObject(';(function(f){f&&new(f.default?f[\"default\"]:f)(self)}((' + t.toString() + \")()))\"), a = new Worker(i);\n      return URL.revokeObjectURL(i), o[TARGET] = a;\n    }\n    var c = new WorkerEmitter({\n      close: function() {\n        this.destroy();\n      }\n    }, o);\n    Object.assign(new WorkerEmitter(o, c), {\n      isThisThread: !0,\n      terminate: function() {\n        c.close(), this.destroy();\n      }\n    }), t().call(c, c);\n  };\n}\n\nfunction WorkerEmitter(e, t) {\n  var r = Object.create(null);\n  return e.onmessage = null, e.addEventListener = function(e, t) {\n    var n = r[e] || (r[e] = []);\n    ~n.indexOf(t) || n.push(t);\n  }, e.removeEventListener = function(e, t) {\n    var n, o = r[e];\n    o && -1 !== (n = o.indexOf(t)) && (o.splice(n, 1), o.length || delete r[e]);\n  }, e.postMessage = function(r) {\n    nextTick(function() {\n      var n = r;\n      if (t.onmessage) try {\n        t.onmessage({\n          data: n,\n          target: e\n        });\n      } catch (e) {\n        console.error(e);\n      }\n      t.emit(\"message\", {\n        type: \"message\",\n        data: n,\n        target: e,\n        timeStamp: +new Date()\n      });\n    });\n  }, e.emit = function(t, n) {\n    var o = r[t];\n    o && o.forEach(function(t, r) {\n      return t.call(e, n);\n    });\n  }, e.destroy = function() {\n    Object.keys(r).forEach(function(e) {\n      var t = r[e];\n      t && (t.length = 0, delete r[e]);\n    }), r = null;\n  }, e;\n}\n\nif (Worker) {\n  var testWorker, objURL = createSourceObject(\"self.onmessage = function () {}\"), testArray = new Uint8Array(1);\n  try {\n    if (/(?:Trident|Edge)\\/(?:[567]|12)/i.test(navigator.userAgent)) throw new Error(\"Not available\");\n    (testWorker = new Worker(objURL)).postMessage(testArray, [ testArray.buffer ]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL), testWorker && testWorker.terminate();\n  }\n}\n\nfunction createSourceObject(e) {\n  var t = SCRIPT_TYPE;\n  try {\n    return URL.createObjectURL(new Blob([ e ], {\n      type: t\n    }));\n  } catch (n) {\n    var r = new BlobBuilder();\n    return r.append(e), URL.createObjectURL(r.getBlob(t));\n  }\n}\n\nexport { workerCtor };\n","\nimport * as webworkify from '\u0000webworkifyHelpers'\nexport default webworkify.workerCtor('worker#./workers/ObjParser.worker.js', function() { return (function(e,r){return e(r={exports:{}},r.exports),r.exports})(function (module, exports) {\n  \n\nfunction parse(str) {\n  if(typeof buf !== 'string') {\n    str = str.toString();\n  }\n\n  var lines = str.trim().split('\\n');\n\n  var positions = [];\n  var cells = [];\n  var vertexUVs = [];\n  var vertexNormals = [];\n  var faceUVs = [];\n  var faceNormals = [];\n  var name = null;\n\n  for(var i=0; i<lines.length; i++) {\n    var line = lines[i];\n\n    // sending some progress info\n    if(i%~~(lines.length/100)===0){\n      postMessage({\n        status: 'progress',\n        step: 'parsing',\n        progress: i/lines.length\n      })\n    }\n\n    if(line[0] === '#') continue;\n\n    var parts = line\n      .trim()\n      .replace(/ +/g, ' ')\n      .split(' ');\n\n    switch(parts[0]) {\n      case 'o':\n        name = parts.slice(1).join(' ');\n        break;\n      case 'v':\n        var position = parts.slice(1).map(Number).slice(0, 3);\n        positions.push(position);\n        break;\n      case 'vt':\n        var uv = parts.slice(1).map(Number);\n        vertexUVs.push(uv);\n        break;\n      case 'vn':\n        var normal = parts.slice(1).map(Number);\n        vertexNormals.push(normal);\n        break;\n      case 'f':\n        var positionIndices = [];\n        var uvIndices = [];\n        var normalIndices = [];\n\n        parts\n          .slice(1)\n          .forEach(function(part) {\n            var indices = part\n              .split('/')\n              .map(function(index) {\n                if(index === '') {\n                  return NaN;\n                }\n                return Number(index);\n              })\n\n            positionIndices.push(convertIndex(indices[0], positions.length));\n\n            if(indices.length > 1) {\n              if(!isNaN(indices[1])) {\n                uvIndices.push(convertIndex(indices[1], vertexUVs.length));\n              }\n              if(!isNaN(indices[2])) {\n                normalIndices.push(convertIndex(indices[2], vertexNormals.length));\n              }\n            }\n\n          });\n\n          cells.push(positionIndices);\n\n          if(uvIndices.length > 0) {\n            faceUVs.push(uvIndices);\n          }\n          if(normalIndices.length > 0) {\n            faceNormals.push(normalIndices);\n          }\n\n        break;\n      default:\n        // skip\n    }\n\n  }\n\n  var mesh = {\n    positions: positions,\n    cells: cells\n  };\n\n  if(vertexUVs.length > 0) {\n    mesh.vertexUVs = vertexUVs;\n  }\n\n  if(faceUVs.length > 0) {\n    mesh.faceUVs = faceUVs;\n  }\n\n  if(vertexNormals.length > 0) {\n    mesh.vertexNormals = vertexNormals;\n  }\n\n  if(faceNormals.length > 0) {\n    mesh.faceNormals = faceNormals;\n  }\n\n  if(name !== null) {\n    mesh.name = name;\n  }\n\n  return mesh;\n}\n\nfunction convertIndex(objIndex, arrayLength) {\n  return objIndex > 0 ? objIndex - 1 : objIndex + arrayLength;\n}\n\n\n// the worker code lies in the export instruction\nfunction ObjParser() {\n\n\n  addEventListener('message',function (e) {\n    // console.log(e.data)\n    let objString = e.data\n    let meshData = parse(objString)\n\n    let totalSteps = meshData.cells.length * meshData.cells[0].length + meshData.positions.length\n    let progressStep = 0\n\n\n    // Usually 3 because polygons are triangle, but OBJ allows different\n    const verticesPerPolygon = meshData.cells[0].length\n    let indices = new Uint32Array( verticesPerPolygon * meshData.cells.length )\n    let positions = new Float32Array( 3 * meshData.positions.length )\n\n    // flattening the indices\n    for (let i=0; i<meshData.cells.length; i += 1) {\n      let newIndex = i * verticesPerPolygon\n      for (let ii=0; ii<verticesPerPolygon; ii += 1) {\n        indices[newIndex + ii] = meshData.cells[i][ii]\n\n\n        // sending some progress info\n        if(progressStep%~~(totalSteps/100)===0){\n          postMessage({\n            status: 'progress',\n            step: 'processing',\n            progress: progressStep/totalSteps\n          })\n        }\n\n        progressStep ++\n      }\n    }\n\n    // flatening the positions\n    for (let p=0; p<meshData.positions.length; p += 1) {\n      let newIndex = p * 3\n      positions[newIndex] = meshData.positions[p][0]\n      positions[newIndex+1] = meshData.positions[p][1]\n      positions[newIndex+2] = meshData.positions[p][2]\n\n\n      // sending some progress info\n      if(progressStep%~~(totalSteps/100)===0){\n        postMessage({\n          status: 'progress',\n          step: 'processing',\n          progress: progressStep/totalSteps\n        })\n      }\n\n      progressStep ++\n    }\n\n    postMessage({\n      status: 'progress',\n      step: 'done',\n      progress: 1\n    })\n\n    postMessage({\n      status: 'done',\n      indices: indices,\n      positions: positions,\n      verticesPerPolygon: verticesPerPolygon\n    })\n\n  })\n}\n\nmodule.exports = ObjParser\n\n});})\n","import * as THREE from 'three'\nimport ObjParserWorker from 'worker#./workers/ObjParser.worker.js'\n\nconst MESH_FORMAT_LOOKUP = {\n  obj: \"parseObj\"\n}\n\nclass MeshParser {\n\n  static parseObjFromUrl(url, cbDone, cbProgress){\n    fetch(url)\n      .then(function(response) {\n        if(response.ok === false){\n          throw new Error(`No file at ${url}`)\n        }\n        return response.text()\n      })\n      .then(function(objString) {\n\n        let worker = new ObjParserWorker()\n        worker.addEventListener('message', function (e) {\n          let messageData = e.data\n          let status = messageData.status\n\n          if(status === 'progress'){\n            cbProgress(messageData)\n          } else if(status === 'done'){\n            let geometry = new THREE.BufferGeometry()\n            geometry.setIndex( new THREE.BufferAttribute( messageData.indices, 1 ) )\n            geometry.addAttribute( 'position', new THREE.BufferAttribute( messageData.positions, messageData.verticesPerPolygon ) )\n            geometry.computeBoundingSphere()\n            geometry.computeVertexNormals()\n            cbDone({\n              error: null,\n              geometry: geometry\n            })\n          }\n\n        })\n        worker.postMessage(objString)\n\n      })\n      .catch( e => {\n        cbDone({\n          error: e,\n          geometry: null\n        })\n      })\n\n\n  }\n\n\n\n  static parseFromUrl(url, format, cbDone, cbProgress){\n    MeshParser[MESH_FORMAT_LOOKUP[format] + 'FromUrl'](url, cbDone, cbProgress)\n  }\n\n}\n\n\nexport default MeshParser\n","import * as THREE from 'three'\n// import RawPointsParserWorker from 'worker#./workers/RawPointsParser.worker.js'\n\nconst POINT_FORMAT_LOOKUP = {\n  raw: \"parseRaw\"\n}\n\nclass PointCloudParser {\n\n  static parseRawFromUrl(url, cbDone, cbProgress){\n    fetch(url)\n      .then(function(response) {\n        if(response.ok === false){\n          throw new Error(`No file at ${url}`)\n        }\n        return response.blob()\n      })\n      .then(function(pointBlob){\n        return new Response(pointBlob).arrayBuffer()\n      })\n      .then(function(pointBuffer) {\n        console.time('points')\n        let geometry = new THREE.BufferGeometry()\n        geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( new Float32Array(pointBuffer), 3 ) )\n        console.timeEnd('points')\n\n        cbDone({\n          error: null,\n          geometry: geometry\n        })\n      })\n      .catch( e => {\n        cbDone({\n          error: e,\n          geometry: null\n        })\n      })\n\n\n  }\n\n\n\n  static parseFromUrl(url, format, cbDone, cbProgress){\n    PointCloudParser[POINT_FORMAT_LOOKUP[format] + 'FromUrl'](url, cbDone, cbProgress)\n  }\n\n}\n\n\nexport default PointCloudParser\n","import * as THREE from 'three'\nimport EventManager from '@jonathanlurie/eventmanager'\nimport MeshParser from './MeshParser'\nimport PointCloudParser from './PointCloudParser'\n\n/**\n * Events expected:\n *\n * - 'onMeshLoaded': whenever a mesh is loaded. the callback of this event is called with the arg:\n *    @param {THREE.Mesh} mesh - mesh object\n *    @param {string} id - id of the mesh (as used within this collection)\n *\n * - 'onMeshLoadingProgress': when the loading status is updated. The callback arguments are:\n *    @param {string} id - id of the element that could not be loaded\n *    @param {string} step - name of the step being in progression (ie. 'parsing')\n *    @param {number} progress - percentage of progress on the 'step'\n *\n * - 'onMeshLoadError': whenever a mesh could not be loaded, for various reasons. Args of the callbac:\n *    @param {Error} error - the error explaining what was wrong\n *    @param {string} id - id of the element that could not be loaded\n */\nclass MeshCollection extends EventManager {\n\n  constructor(threeContext=null){\n    super()\n    this._threeContext = threeContext\n\n    this._container = new THREE.Object3D()\n    this._container.name = 'meshContainer'\n    this._threeContext.getScene().add(this._container)\n    this._collection = {}\n\n    // let sphereGeom = new THREE.SphereBufferGeometry( 10, 32, 32 );\n    // let sphereMat = new THREE.MeshBasicMaterial( {color: 0xff00ff} );\n    // let sphereMesh = new THREE.Mesh( sphereGeom, sphereMat );\n    // this._threeContext.getScene().add(sphereMesh)\n    // this._threeContext.addSampleShape()\n\n    // const geometry = new THREE.TorusKnotBufferGeometry(10, 3, 100, 16)\n    // const material = new THREE.MeshPhongMaterial({ color: Math.ceil(Math.random() * 0xffff00) })\n    // const torusKnot = new THREE.Mesh(geometry, material)\n    // this._threeContext.getScene().add(torusKnot)\n\n    // // DEBUG\n    // let axesHelper = new THREE.AxesHelper(100)\n    // this._threeContext.getScene().add(axesHelper)\n  }\n\n\n  _generateFresnelMateral(color) {\n    let vertexShader = `\n    #version 300 es\n    precision highp float;\n\n    uniform vec3 viewVector;\n    uniform float c;\n    uniform float p;\n    varying float intensity;\n\n    void main()\n    {\n      vec3 vNormal = normalize( normalMatrix * normal );\n      vec3 vNormel = normalize( normalMatrix * viewVector );\n      intensity = pow( c - dot(vNormal, vNormel), p );\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n    `.trim()\n\n    let fragmentShader = `\n    #version 300 es\n    precision highp float;\n    uniform vec3 glowColor;\n    uniform float alpha;\n    varying float intensity;\n    out vec4 out_FragColor;\n    void main()\n    {\n      vec3 glow = glowColor * intensity;\n      out_FragColor = vec4( glow, intensity * alpha);\n    }\n    `.trim()\n\n    let fresnelMaterial = new THREE.ShaderMaterial({\n        uniforms: {\n          c:   { type: \"f\", value: 1.0 },\n          alpha:   { type: \"f\", value: 1.0 },\n          p:   { type: \"f\", value: 1.4 },\n          glowColor: { type: \"c\", value: new THREE.Color(color) },\n          viewVector: { type: \"v3\", value: this._threeContext.getCamera().position } // TODO: this should be removed after test\n        },\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        side: THREE.FrontSide,\n        blending: THREE.AdditiveBlending,\n        transparent: true,\n\n        // depthTest: false,\n        depthWrite: false,\n      })\n\n      let that = this\n\n      // TODO: this should also be removed after test\n      this._threeContext.on('beforeRender', function(){\n        fresnelMaterial.uniforms.viewVector.value = that._threeContext.getCamera().position\n      })\n\n    return fresnelMaterial\n  }\n\n\n  /**\n   * Load a mesh file from a distant file, with the provided url.\n   * @param {string} url - the url to load the file from\n   * @param {object} options - the options object\n   * @param {string} options.format - must be one of: 'obj' (no others for the moment :D )\n   * @param {string} options.id - the id to attribute to the mesh once it will be part of the collection. Automatically generated if not provided\n   * @param {boolean} options.makeVisible - if true, the mesh will be added and made visible once loaded. If false, it's just going to be parsed and will have to be added later using its id (default: true)\n   * @param {string} options.color - the color to apply to the mesh in the format '#FFFFFF' (default: '#FFFFFF', does not apply if a material is given)\n   * @param {boolean} options.focusOn - once loaded, the camera will look at it\n   * @param {THREE.Material} options.material - the material to apply to this mesh (default: a generated Fresnel material)\n   */\n  loadMeshFromUrl(url, options = {}){\n    let that = this\n    let id = 'id' in options ? options.id : Math.random().toString().split('.')[1]\n    let makeVisible = 'makeVisible' in options ? options.makeVisible : true\n    let color = 'color' in options ? options.color : '#FFFFFF'\n    let material = 'material' in options ? options.material : this._generateFresnelMateral(color)\n    let format = 'format' in options ? options.format : 'obj'\n    let focusOn = 'focusOn' in options ? options.focusOn : false\n\n    MeshParser.parseFromUrl(url, format,\n      // cbDone,\n      function(info){\n        if(info.error){\n          return that.emit('onMeshLoadError', [info.error, id])\n        }\n\n        let geometry = info.geometry\n        let mesh = new THREE.Mesh(geometry, material)\n\n        // let geometry = new THREE.SphereBufferGeometry( 10, 32, 32 );\n        // let material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // let mesh = new THREE.Mesh( geometry, material );\n\n        mesh.name = id\n        mesh.visible = makeVisible\n        that._collection[id] = mesh\n        that._container.add(mesh)\n        // that._threeContext.getScene().add(mesh)\n\n        if(focusOn){\n          let lookatPos = geometry.boundingSphere.center\n          that._threeContext.getCamera().position.set(lookatPos.x + geometry.boundingSphere.radius * 4, lookatPos.y, lookatPos.z)\n          that._threeContext.lookAt(geometry.boundingSphere.center)\n        }\n\n        // DEBUG\n        // let axesHelper = new THREE.AxesHelper(100)\n        // // axesHelper.position.set(geometry.boundingSphere.center.x, geometry.boundingSphere.center.y, geometry.boundingSphere.center.z)\n        // that._threeContext.getScene().add(axesHelper)\n\n        that.emit('onMeshLoaded', [mesh, id])\n      },\n\n      // cbProgress\n      function(info){\n        that.emit('onMeshLoadingProgress', [id, info.step, info.progress])\n      })\n  }\n\n\n  /**\n   * Is a mesh with such id in the collection?\n   * @return {boolean} true if present in collection, false if not\n   */\n  has(id){\n    return (id in this._collection)\n  }\n\n\n  /**\n   * Show the mesh that has such id\n   */\n  show(id){\n    if(id in this._collection){\n      this._collection[id].visible = true\n    }\n  }\n\n\n  /**\n   * Hide the mesh that has such id\n   */\n  hide(id){\n    if(id in this._collection){\n      this._collection[id].visible = false\n    }\n  }\n\n\n  /**\n   * NOT WORKING FOR NOW\n   */\n  detach(id){\n    if(id in this._collection){\n      // this._container\n      let mesh = this._collection[id]\n      this._container.remove(mesh)\n    }\n  }\n\n\n\n\n\n  /**\n   * Load a mesh file from a distant file, with the provided url.\n   * @param {string} url - the url to load the file from\n   * @param {object} options - the options object\n   * @param {number} options.size - size of each point (default: 100, as the space unit is probably going to be micron)\n   * @param {string} options.format - must be one of: 'raw' (no others for the moment :D )\n   * @param {string} options.id - the id to attribute to the mesh once it will be part of the collection. Automatically generated if not provided\n   * @param {boolean} options.makeVisible - if true, the mesh will be added and made visible once loaded. If false, it's just going to be parsed and will have to be added later using its id (default: true)\n   * @param {string} options.color - the color to apply to the mesh in the format '#FFFFFF' (default: '#FFFFFF', does not apply if a material is given)\n   * @param {boolean} options.focusOn - once loaded, the camera will look at it\n   */\n  loadPointCloudFromUrl(url, options = {}){\n    let that = this\n    let id = 'id' in options ? options.id : Math.random().toString().split('.')[1]\n    let makeVisible = 'makeVisible' in options ? options.makeVisible : true\n    let color = 'color' in options ? options.color : '#FFFFFF'\n    let format = 'format' in options ? options.format : 'raw'\n    let focusOn = 'focusOn' in options ? options.focusOn : false\n    let size = 'size' in options ? options.size : 100\n\n    PointCloudParser.parseFromUrl(url, format,\n      // cbDone,\n      function(info){\n        if(info.error){\n          return that.emit('onMeshLoadError', [info.error, id])\n        }\n\n        let material = that._generatePointCloudMaterial(color, size)\n        let geometry = info.geometry\n        let particles = new THREE.Points( geometry, material )\n\n        particles.name = id\n        particles.visible = makeVisible\n        that._collection[id] = particles\n        that._container.add(particles)\n        // that._threeContext.getScene().add(particles)\n\n        if(focusOn){\n          let lookatPos = geometry.boundingSphere.center\n          that._threeContext.getCamera().position.set(lookatPos.x + geometry.boundingSphere.radius * 4, lookatPos.y, lookatPos.z)\n          that._threeContext.lookAt(geometry.boundingSphere.center)\n        }\n\n        // DEBUG\n        // let axesHelper = new THREE.AxesHelper(100)\n        // // axesHelper.position.set(geometry.boundingSphere.center.x, geometry.boundingSphere.center.y, geometry.boundingSphere.center.z)\n        // that._threeContext.getScene().add(axesHelper)\n\n        that.emit('onMeshLoaded', [particles, id])\n      },\n\n      // cbProgress\n      function(info){\n        that.emit('onMeshLoadingProgress', [id, info.step, info.progress])\n      })\n  }\n\n\n\n\n\n  /**\n   *\n   * TEST\n   */\n  addPointCloud(nbPoints=1000, color){\n    // https://github.com/mrdoob/three.js/blob/master/examples/webgl_points_sprites.html\n\n    let axesHelper = new THREE.AxesHelper(100)\n    // axesHelper.position.set(geometry.boundingSphere.center.x, geometry.boundingSphere.center.y, geometry.boundingSphere.center.z)\n    this._threeContext.getScene().add(axesHelper)\n\n    let geometry = new THREE.BufferGeometry();\n    let vertices = [];\n    // let textureLoader = new THREE.TextureLoader();\n\n    // for ( let i = 0; i < 10000; i ++ ) {\n    //   let x = Math.random() * 20 - 10;\n    //   let y = Math.random() * 20 - 10;\n    //   let z = Math.random() * 20 - 10;\n    //   vertices.push( x, y, z )\n    // }\n\n    for ( let i = 0; i < nbPoints; i ++ ) {\n      let x = Math.random() * 10000;\n      let y = Math.random() * 10000;\n      let z = Math.random() * 10000;\n      vertices.push( x, y, z )\n    }\n\n    geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) )\n\n\n    let shader = {\n      vertex: `\n      uniform float size;\n\n      void main() {\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_PointSize = size * ( 150.0 / -mvPosition.z );\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n\n      fragment: `\n      uniform vec3 color;\n\n      void main() {\n        vec2 uv = vec2( gl_PointCoord.x -0.5, 1.0 - gl_PointCoord.y-0.5 );\n        float dFromCenter = sqrt(uv.x*uv.x + uv.y*uv.y);\n        float alpha = .7;\n        float blurStart = 0.3;\n\n        // without blurry edges\n        if(dFromCenter > 0.5){\n          discard;\n        }else {\n          vec4 tex = vec4(color, alpha);\n          gl_FragColor = tex;\n        }\n\n        // with blurry edges\n        // if(dFromCenter > 0.5){\n        //   discard;\n        // }else if(dFromCenter > blurStart) {\n        //   alpha = alpha - (dFromCenter - blurStart) / (0.5-blurStart);\n        //   vec4 tex = vec4(1.0, 0.0, 0.0, alpha);\n        //   gl_FragColor = tex;\n        // } else {\n        //   vec4 tex = vec4(1.0, 0.0, 0.0, alpha);\n        //   gl_FragColor = tex;\n        // }\n      }`\n    }\n\n    let uniforms = {\n      size: { value: 100.},\n      color: { type: \"c\", value: new THREE.Color(color) },\n    }\n\n    // material\n    var material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   shader.vertex,\n      fragmentShader: shader.fragment,\n      transparent:    true,\n      blending: THREE.AdditiveBlending,\n      //depthTest: false,\n    });\n\n    let particles = new THREE.Points( geometry, material )\n\n    this._collection['someparticle'] = particles\n    this._container.add(particles)\n  }\n\n\n  _generatePointCloudMaterial(color='#FFFFFF', pointSize=100){\n    let shader = {\n      vertex: `\n      uniform float size;\n\n      void main() {\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_PointSize = size * ( 150.0 / -mvPosition.z );\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n\n      fragment: `\n      uniform vec3 color;\n\n      void main() {\n        vec2 uv = vec2( gl_PointCoord.x -0.5, 1.0 - gl_PointCoord.y-0.5 );\n        float dFromCenter = sqrt(uv.x*uv.x + uv.y*uv.y);\n        float alpha = .7;\n        float blurStart = 0.3;\n\n        // without blurry edges\n        if(dFromCenter > 0.5){\n          discard;\n        }else {\n          vec4 tex = vec4(color, alpha);\n          gl_FragColor = tex;\n        }\n\n        // with blurry edges\n        // if(dFromCenter > 0.5){\n        //   discard;\n        // }else if(dFromCenter > blurStart) {\n        //   alpha = alpha - (dFromCenter - blurStart) / (0.5-blurStart);\n        //   vec4 tex = vec4(1.0, 0.0, 0.0, alpha);\n        //   gl_FragColor = tex;\n        // } else {\n        //   vec4 tex = vec4(1.0, 0.0, 0.0, alpha);\n        //   gl_FragColor = tex;\n        // }\n      }`\n    }\n\n    let uniforms = {\n      size: { value: pointSize},\n      color: { type: \"c\", value: new THREE.Color(color) },\n    }\n\n    // material\n    var material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   shader.vertex,\n      fragmentShader: shader.fragment,\n      transparent:    true,\n      blending: THREE.AdditiveBlending,\n      //depthTest: false, // default: true\n    })\n\n    return material\n  }\n\n\n}\n\nexport default MeshCollection\n"],"names":["webworkify.workerCtor","THREE.BufferGeometry","THREE.BufferAttribute","THREE.Float32BufferAttribute","THREE.Object3D","THREE.ShaderMaterial","THREE.Color","THREE.FrontSide","THREE.AdditiveBlending","THREE.Mesh","THREE.Points","THREE.AxesHelper"],"mappings":"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"}